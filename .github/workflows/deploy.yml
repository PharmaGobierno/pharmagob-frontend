name: Build and Deploy to GKE

on:
  push:
    branches: [develop, staging, main]

jobs:
  build-and-deploy:
    name: Build & Deploy to GKE
    runs-on: ubuntu-latest
    # Asigna automáticamente el environment (GitHub inyecta las variables)
    environment: ${{
      startsWith(github.ref, 'refs/heads/master') && 'prod' ||
      startsWith(github.ref, 'refs/heads/staging') && 'staging' ||
      'dev'
      }}

    steps:
      # ✅ Descarga del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Setea el nombre de la imagen basado en el repositorio
      - name: Set IMAGE_NAME from repo
        id: set_image
        run: echo "IMAGE_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV

      # ✅ Autenticación con GCP usando una cuenta de servicio
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ Configura Docker para usar Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-docker.pkg.dev

      # ✅ Construye y sube la imagen Docker
      - name: Build and push Docker image
        env:
          IMAGE_URI: us-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/gcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # ✅ Instala kubectl y plugin para GKE de forma optimizada
      - name: Install kubectl and GKE plugin
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          install_components: 'kubectl,gke-gcloud-auth-plugin'

      # ✅ Obtiene credenciales del clúster GKE
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ vars.GKE_CLUSTER_NAME }} \
            --region ${{ vars.REGION }}

      # ✅ Renderiza el archivo YAML usando variables de entorno
      - name: Render Kubernetes manifest
        run: |
          envsubst < kubernetes/deployment.yaml > kubernetes/deployment-rendered.yaml
          envsubst < kubernetes/service.yaml > kubernetes/service-rendered.yaml
          cat kubernetes/deployment-rendered.yaml
          cat kubernetes/service-rendered.yaml
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}

      # ✅ Aplica el manifiesto a GKE
      - name: Deploy to GKE
        run: |
          kubectl apply -f kubernetes/deployment-rendered.yaml
          kubectl apply -f kubernetes/service-rendered.yaml

      # ✅ Verifica que el despliegue esté funcionando
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/$(yq '.metadata.name' kubernetes/deployment-rendered.yaml)